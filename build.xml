<project name="RiskyBusiness" default="dist" basedir=".">
	<description>
		Project Description?
	</description>

	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="lib" location="lib" />

	<property name="out.dir"  location="bin" />
	<property name="out.jarname" location="${out.dir}/RiskyBusiness.jar" />

	<!-- Class path for JUnit lib + non-test files -->
	<path id="junit.class.path">
		<pathelement location="${lib}/junit-4.11.jar"/>
		<pathelement location="${lib}/hamcrest-core-1.2.1.jar"/>

		<pathelement path="${build}"/>
	</path>

	<target name="init">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	</target>

	<target name="compile" depends="init"
		description="Compile main program source" >
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" includeantruntime="false">
			<classpath refid="junit.class.path" />
		</javac>
	</target>

	<target name="dist" depends="compile"
		description="Copy built artifact into output location" >
		<!-- Create the distribution directory -->
		<mkdir dir="${out.dir}"/>

		<!-- Put the final JAR file in the output directory -->
		<jar jarfile="${out.jarname}" basedir="${build}">
			<manifest>
				<attribute name="Main-Class" value="main.Main" />
			</manifest>
		</jar>
	</target>

	<target name="clean"
		description="Clean up" >
		<!-- Delete the ${build} and ${out.dir} directory trees -->
		<delete dir="${build}" />
		<delete dir="${out.jarname}" />
	</target>

	<target name="compile-test" depends="compile"
		description="Compile test code">

		<!-- Compile the test code java source from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" includeantruntime="false">
			<classpath refid="junit.class.path" />
		</javac>
	</target>

	<target name="test" depends="compile-test"
		description="Run unit tests">
		<junit printsummary="yes" showoutput="yes" fork="true">
			<classpath refid="junit.class.path"/>
			<batchtest>
				<fileset dir="${src}">
					<include name="**/test/**/*Test*" />
				</fileset>
			</batchtest>
			<formatter type="plain" usefile="false"/>
		</junit>
	</target>
</project>
